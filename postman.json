{
	"info": {
		"_postman_id": "950830e1-68b2-4bb2-823e-c650315101ae",
		"name": "qTrade Docs live",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "One Ticker",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/ticker/:market_string",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"ticker",
						":market_string"
					],
					"variable": [
						{
							"key": "market_string",
							"value": "Int or Str",
							"type": "string",
							"description": "May be an ID or a string pair ala 'LTC_BTC'"
						}
					]
				},
				"description": "Get ticker values for the given market. The `market_string` value should be formatted ala `BTC_LTC` for the BTC/LTC market."
			},
			"response": [
				{
					"name": "Ticker Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/ticker/:market_string",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"ticker",
								":market_string"
							],
							"variable": [
								{
									"key": "market_string",
									"value": "VEO_BTC"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 31 Jan 2019 23:38:14 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=0; includeSubDomains"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "4a2002c099dcc566-ORD"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"ask\": \"0.02249\",\n        \"bid\": \"0.0191\",\n        \"day_avg_price\": \"0.0197095311101552\",\n        \"day_change\": \"0.0380429141071119\",\n        \"day_high\": \"0.02249\",\n        \"day_low\": \"0.0184\",\n        \"day_open\": \"0.01840001\",\n        \"day_volume_base\": \"0.42644484\",\n        \"day_volume_market\": \"21.63647819\",\n        \"id\": 15,\n        \"id_hr\": \"VEO_BTC\",\n        \"last\": \"0.0191\"\n    }\n}"
				}
			]
		},
		{
			"name": "All Tickers",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/tickers",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"tickers"
					]
				},
				"description": "Get ticker values for all markets."
			},
			"response": [
				{
					"name": "Tickers Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/tickers",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"tickers"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 00:25:58 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=0; includeSubDomains"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "4a2048ae4945c52a-ORD"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"markets\": [\n            {\n                \"ask\": \"0.0034\",\n                \"bid\": \"0.0011\",\n                \"day_avg_price\": null,\n                \"day_change\": null,\n                \"day_high\": null,\n                \"day_low\": null,\n                \"day_open\": null,\n                \"day_volume_base\": \"0\",\n                \"day_volume_market\": \"0\",\n                \"id\": 23,\n                \"id_hr\": \"GRIN_BTC\",\n                \"last\": \"0.0033\"\n            },\n            {\n                \"ask\": \"0.000099\",\n                \"bid\": \"0.0000795\",\n                \"day_avg_price\": \"0.0000795337894515\",\n                \"day_change\": \"-0.2205882352941176\",\n                \"day_high\": \"0.00008\",\n                \"day_low\": \"0.0000795\",\n                \"day_open\": \"0.000102\",\n                \"day_volume_base\": \"0.07353291\",\n                \"day_volume_market\": \"924.549308\",\n                \"id\": 19,\n                \"id_hr\": \"SNOW_BTC\",\n                \"last\": \"0.0000795\"\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "One Currency",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/currency/:code",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"currency",
						":code"
					],
					"variable": [
						{
							"key": "code",
							"value": "string",
							"type": "string",
							"description": "The ticker code of the currency. Ala 'BTC'"
						}
					]
				},
				"description": "Get general information about a specific currency."
			},
			"response": [
				{
					"name": "Currency by Code Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/currency/BTC",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"currency",
								"BTC"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "327"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Tue, 21 May 2019 02:46:29 GMT"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Ratelimit-Limit",
							"value": "60"
						},
						{
							"key": "X-Ratelimit-Remaining",
							"value": "60"
						},
						{
							"key": "X-Ratelimit-Reset",
							"value": "32"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"currency\": {\n            \"code\": \"BTC\",\n            \"long_name\": \"Bitcoin\",\n            \"type\": \"bitcoin_like\",\n            \"status\": \"ok\",\n            \"precision\": 8,\n            \"config\": {\n                \"price\": 1,\n                \"confirms\": 6,\n                \"withdraw_fee\": \"0.001\",\n                \"default_signer\": 1,\n                \"address_version\": 111,\n                \"satoshi_per_byte\": 10,\n                \"required_confirmations\": 1,\n                \"required_generate_confirmations\": 120\n            },\n            \"metadata\": {},\n            \"can_withdraw\": true\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "All Currencies",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/currencies",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"currencies"
					]
				},
				"description": "Get general information about all available currencies."
			},
			"response": [
				{
					"name": "Currencies",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/currencies",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"currencies"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "869",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Sat, 07 Apr 2018 04:33:51 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Vary",
							"value": "Origin",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"currencies\": [\n            {\n                \"code\": \"BTC\",\n                \"long_name\": \"Bitcoin\",\n                \"type\": \"bitcoin_like\",\n                \"status\": \"ok\",\n                \"precision\": 8,\n                \"config\": {\n                    \"confirms\": 6,\n                    \"withdraw_fee\": \"0.001\",\n                    \"address_version\": 111,\n                    \"satoshi_per_byte\": 10,\n                    \"required_confirmations\": 6,\n                    \"required_generate_confirmations\": 120\n                },\n                \"metadata\": {},\n                \"can_withdraw\": true\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "One Market",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/market/:market_string",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"market",
						":market_string"
					],
					"variable": [
						{
							"key": "market_string",
							"value": "Int or Str",
							"type": "string",
							"description": "May be an ID or a string pair ala 'LTC_BTC'"
						}
					]
				},
				"description": "Return details about a specific market including info about fees, user permissions/market state and the most recent 200 trades."
			},
			"response": [
				{
					"name": "Market Details Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/market/:market_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"market",
								":market_id"
							],
							"variable": [
								{
									"key": "market_id",
									"value": "15",
									"description": "Integer ID of market"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 00:10:01 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=0; includeSubDomains"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "4a2031508df5c55a-ORD"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"market\": {\n            \"id\": 15,\n            \"market_currency\": \"VEO\",\n            \"base_currency\": \"BTC\",\n            \"maker_fee\": \"0.005\",\n            \"taker_fee\": \"0.005\",\n            \"metadata\": {},\n            \"can_trade\": true,\n            \"can_cancel\": true,\n            \"can_view\": false\n        },\n        \"recent_trades\": [\n            {\n                \"amount\": \"1.64360163\",\n                \"price\": \"0.0191\",\n                \"created_at\": \"2019-01-31T23:09:31.419131Z\"\n            },\n            {\n                \"amount\": \"1.60828469\",\n                \"price\": \"0.02248\",\n                \"created_at\": \"2019-01-31T22:05:16.531659Z\"\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "All Markets",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/markets",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"markets"
					]
				},
				"description": "Get general information about all available markets."
			},
			"response": [
				{
					"name": "Markets",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/markets",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"markets"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 02:51:50 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=0; includeSubDomains"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "4a211e557b63c52a-ORD"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"markets\": [\n            {\n                \"id\": 20,\n                \"market_currency\": \"BIS\",\n                \"base_currency\": \"BTC\",\n                \"maker_fee\": \"0.0025\",\n                \"taker_fee\": \"0.0025\",\n                \"metadata\": {},\n                \"can_trade\": true,\n                \"can_cancel\": true,\n                \"can_view\": true\n            },\n            {\n                \"id\": 19,\n                \"market_currency\": \"SNOW\",\n                \"base_currency\": \"BTC\",\n                \"maker_fee\": \"0.0075\",\n                \"taker_fee\": \"0.0075\",\n                \"metadata\": {},\n                \"can_trade\": true,\n                \"can_cancel\": true,\n                \"can_view\": true\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Market Trades",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/market/:market_string/trades?",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"market",
						":market_string",
						"trades"
					],
					"query": [
						{
							"key": "older_than",
							"value": "Integer",
							"description": "Expects a trade ID and returns trades with an ID < the passed ID",
							"disabled": true
						},
						{
							"key": "newer_than",
							"value": "Integer",
							"description": "Expects a trade ID and returns trades with an ID > the passed ID\n",
							"disabled": true
						}
					],
					"variable": [
						{
							"key": "market_string",
							"value": "Int or Str",
							"type": "string",
							"description": "May be an ID or a string pair ala 'LTC_BTC'"
						}
					]
				},
				"description": "Return historical trade data on a market"
			},
			"response": [
				{
					"name": "Market Trades Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/market/LTC_BTC/trades",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"market",
								"LTC_BTC",
								"trades"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "672"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Tue, 21 May 2019 02:41:35 GMT"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "X-Ratelimit-Limit",
							"value": "60"
						},
						{
							"key": "X-Ratelimit-Remaining",
							"value": "60"
						},
						{
							"key": "X-Ratelimit-Reset",
							"value": "26"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"trades\": [\n            {\n                \"amount\": \"0.00760005\",\n                \"price\": \"0.01181539\",\n                \"seller_taker\": false,\n                \"created_at\": \"2019-05-21T02:41:30.781308Z\"\n            },\n            {\n                \"amount\": \"4.99515615\",\n                \"price\": \"0.01180695\",\n                \"seller_taker\": false,\n                \"created_at\": \"2019-05-21T02:41:30.781308Z\"\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Market Orderbook",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/orderbook/:market_string",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"orderbook",
						":market_string"
					],
					"variable": [
						{
							"key": "market_string",
							"value": "Int or Str",
							"type": "string",
							"description": "May be an ID or a string pair ala 'LTC_BTC'"
						}
					]
				},
				"description": "Get orderbook values for the given market. The `market_string` value should be formatted ala `BTC_LTC` for the BTC/LTC market."
			},
			"response": [
				{
					"name": "Orderbook Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/orderbook/:market_string",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"orderbook",
								":market_string"
							],
							"variable": [
								{
									"key": "market_string",
									"value": "VEO_BTC",
									"description": "Formatted ala LTC_BTC for the LTC/BTC market"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 00:31:02 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=0; includeSubDomains"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "4a205015de84c52a-ORD"
						}
					],
					"cookie": [],
					"body": "{\n\t\"data\": {\n\t\t\"buy\": {\n\t\t\t\"0.000009\": \"150\",\n\t\t\t\"0.0001032\": \"100\",\n\t\t\t\"0.00020139\": \"100\"\n\t\t},\n\t\t\"sell\": {\n\t\t\t\"5\": \"100\",\n\t\t\t\"14\": \"28\",\n\t\t\t\"0.02249\": \"0.99720378\"\n\t\t}\n\t}\n}"
				}
			]
		},
		{
			"name": "OHLCV",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/market/:market_string/ohlcv/:interval",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"market",
						":market_string",
						"ohlcv",
						":interval"
					],
					"variable": [
						{
							"key": "market_string",
							"value": "Int or Str",
							"type": "string",
							"description": "May be an ID or a string pair ala 'LTC_BTC'"
						},
						{
							"key": "interval",
							"value": "String",
							"type": "string",
							"description": "OHLCV data is chunked by this interval"
						}
					]
				},
				"description": "Returns OHLCV data for a specific market. Accepts an interval value which returns OHLCV data in chunks of the specified interval duration. \n\nValid interval values include:\n\nIntervals | Meaning\n---------- | -------\nfivemin | Five minute slices\nfifteenmin | Fifteen minute slices\nthirtymin | Thirty minute slices\nonehour | One hour slices \ntwohour | Two hour slices\nfourhour | Four hour slices \noneday | One day slices "
			},
			"response": [
				{
					"name": "OHLCV Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/market/1/ohlcv/:interval",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"market",
								"1",
								"ohlcv",
								":interval"
							],
							"variable": [
								{
									"key": "interval",
									"value": "fourhour",
									"description": "OHLCH chunk interval"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 03:00:00 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Vary",
							"value": "Accept-Encoding"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Strict-Transport-Security",
							"value": "max-age=0; includeSubDomains"
						},
						{
							"key": "Content-Encoding",
							"value": "gzip"
						},
						{
							"key": "Expect-CT",
							"value": "max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\""
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "CF-RAY",
							"value": "4a212a504aa1c50a-ORD"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"slices\": [\n            {\n                \"time\": \"2018-04-28T04:00:00Z\",\n                \"open\": \"0.02\",\n                \"high\": \"0.02\",\n                \"low\": \"0.02\",\n                \"close\": \"0.02\",\n                \"volume\": \"0.00190564\"\n            },\n            {\n                \"time\": \"2018-04-28T08:00:00Z\",\n                \"open\": \"0.02\",\n                \"high\": \"0.02\",\n                \"low\": \"0.02\",\n                \"close\": \"0.02\",\n                \"volume\": \"0\"\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "User Info",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/user/me",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"me"
					]
				},
				"description": "Fetch general information about the authenticated user account."
			},
			"response": [
				{
					"name": "User Info",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/v1/user/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"me"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "193",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Fri, 06 Apr 2018 20:31:03 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Vary",
							"value": "Origin",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\"data\":{\"user\":{\"id\":1000000,\"email\":\"t@test.com\",\"lname\":\"a\",\"fname\":\"a\",\"verified_email\":false,\"tfa_enabled\":false,\"withdraw_limit\":0,\"can_withdraw\":true,\"can_login\":true,\"can_trade\":true}}}"
				}
			]
		},
		{
			"name": "Balances",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/user/balances",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"balances"
					]
				},
				"description": "Current useable account balances for a user account. Doesn't include amounts currently represented in open orders, pending deposits or withdraws."
			},
			"response": [
				{
					"name": "Balances",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/user/balances",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"balances"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "162",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Fri, 06 Apr 2018 20:31:47 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Vary",
							"value": "Origin",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\"data\":{\"balances\":[{\"currency\":\"BCH\",\"balance\":\"100000000\"},{\"currency\":\"LTC\",\"balance\":\"99992435.78253015\"},{\"currency\":\"BTC\",\"balance\":\"99927153.76074182\"}]}}"
				}
			]
		},
		{
			"name": "User Market View",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/user/market/:market_id",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"market",
						":market_id"
					],
					"variable": [
						{
							"key": "market_id",
							"value": "Integer",
							"description": "Integer ID of market",
							"type": "string"
						}
					]
				},
				"description": "Returns the currently available `base_currency` and `markey_currency`  balances for a user on the given market. These amounts do **not** include amounts currently represented in open orders, pending deposits or withdraws.\n\nAlso returns lists of `open_orders` and `closed_orders`"
			},
			"response": [
				{
					"name": "User Market View",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/user/market/1",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"market",
								"1"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Fri, 06 Apr 2018 20:31:59 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "Vary",
							"value": "Origin",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"base_balance\": \"99927153.76074182\",\n        \"closed_orders\": [\n            {\n                \"id\": 13252,\n                \"market_amount\": \"4.99896025\",\n                \"market_amount_remaining\": \"0\",\n                \"created_at\": \"2018-04-06T17:59:36.366493Z\",\n                \"price\": \"9.90682437\",\n                \"base_amount\": \"0.09102782\",\n                \"order_type\": \"buy_limit\",\n                \"market_id\": 1,\n                \"open\": false,\n                \"trades\": [\n                    {\n                        \"id\": 10289,\n                        \"market_amount\": \"4.99298105\",\n                        \"price\": \"9.88866999\",\n                        \"base_amount\": \"49.37394186\",\n                        \"taker\": true,\n                        \"base_fee\": \"0.12343485\",\n                        \"created_at\": \"2018-04-06T17:59:36.366493Z\"\n                    },\n                    {\n                        \"id\": 10288,\n                        \"market_amount\": \"0.0059792\",\n                        \"price\": \"9.88068047\",\n                        \"base_amount\": \"0.05907856\",\n                        \"taker\": true,\n                        \"base_fee\": \"0.00014769\",\n                        \"created_at\": \"2018-04-06T17:59:36.366493Z\"\n                    }\n                ]\n            }\n        ],\n        \"market_balance\": \"99992435.78253015\",\n        \"open_orders\": [\n            {\n                \"id\": 13249,\n                \"market_amount\": \"5.0007505\",\n                \"market_amount_remaining\": \"5.0007505\",\n                \"created_at\": \"2018-04-06T17:59:35.867526Z\",\n                \"price\": \"9.86398279\",\n                \"base_amount\": \"49.45063516\",\n                \"order_type\": \"buy_limit\",\n                \"market_id\": 1,\n                \"open\": true,\n                \"trades\": null\n            },\n            {\n                \"id\": 13192,\n                \"market_amount\": \"5.00245975\",\n                \"market_amount_remaining\": \"0.0173805\",\n                \"created_at\": \"2018-04-06T17:59:27.347006Z\",\n                \"price\": \"9.90428849\",\n                \"order_type\": \"sell_limit\",\n                \"market_id\": 1,\n                \"open\": true,\n                \"trades\": [\n                    {\n                        \"id\": 10241,\n                        \"market_amount\": \"4.98507925\",\n                        \"price\": \"9.90428849\",\n                        \"base_amount\": \"49.37366303\",\n                        \"taker\": false,\n                        \"base_fee\": \"0.12343415\",\n                        \"created_at\": \"2018-04-06T17:59:27.531716Z\"\n                    }\n                ]\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Get Orders",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/user/orders?open=Boolean",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"orders"
					],
					"query": [
						{
							"key": "open",
							"value": "Boolean",
							"description": "Filter by opened/closed orders"
						},
						{
							"key": "older_than",
							"value": "Integer",
							"description": "Expects an order ID and returns orders with and ID < the passed ID",
							"disabled": true
						},
						{
							"key": "newer_than",
							"value": "Integer",
							"description": "Expects an order ID and returns orders with and ID > the passed ID",
							"disabled": true
						}
					]
				},
				"description": "Fetches the last 200 orders made by your account with all the trades associated.\n\nIf you need more than the last 200 trades use the `older_than` param. Passing an order ID will return results only orders which are older than that order ID."
			},
			"response": [
				{
					"name": "Order History",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/user/orders",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"orders"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Fri, 06 Apr 2018 20:36:52 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked",
							"name": "Transfer-Encoding",
							"description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
						},
						{
							"key": "Vary",
							"value": "Origin",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"orders\": [\n            {\n                \"id\": 13252,\n                \"market_amount\": \"4.99896025\",\n                \"market_amount_remaining\": \"0\",\n                \"created_at\": \"2018-04-06T17:59:36.366493Z\",\n                \"price\": \"9.90682437\",\n                \"base_amount\": \"0.09102782\",\n                \"order_type\": \"buy_limit\",\n                \"market_id\": 1,\n                \"open\": false,\n                \"trades\": [\n                    {\n                        \"id\": 10289,\n                        \"market_amount\": \"4.99298105\",\n                        \"price\": \"9.88866999\",\n                        \"base_amount\": \"49.37394186\",\n                        \"taker\": true,\n                        \"base_fee\": \"0.12343485\",\n                        \"created_at\": \"2018-04-06T17:59:36.366493Z\"\n                    },\n                    {\n                        \"id\": 10288,\n                        \"market_amount\": \"0.0059792\",\n                        \"price\": \"9.88068047\",\n                        \"base_amount\": \"0.05907856\",\n                        \"taker\": true,\n                        \"base_fee\": \"0.00014769\",\n                        \"created_at\": \"2018-04-06T17:59:36.366493Z\"\n                    }\n                ]\n            },\n            {\n                \"id\": 13099,\n                \"market_amount\": \"4.9950993\",\n                \"market_amount_remaining\": \"4.9950993\",\n                \"created_at\": \"2018-04-06T17:59:12.941034Z\",\n                \"price\": \"9.85114439\",\n                \"base_amount\": \"49.33046306\",\n                \"order_type\": \"buy_limit\",\n                \"market_id\": 1,\n                \"open\": true,\n                \"trades\": null\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Order Details",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/user/order/:order_id",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"order",
						":order_id"
					],
					"variable": [
						{
							"key": "order_id",
							"value": "Integer",
							"description": "ID of the order to lookup",
							"type": "string"
						}
					]
				},
				"description": "Takes an Order ID and returns data about that order"
			},
			"response": [
				{
					"name": "Order Details Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/user/order/:order_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"order",
								":order_id"
							],
							"variable": [
								{
									"key": "order_id",
									"value": "109",
									"description": "ID of the order to lookup"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 05:53:12 GMT"
						},
						{
							"key": "Content-Length",
							"value": "200"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"order\": {\n            \"id\": 109,\n            \"market_amount\": \"1\",\n            \"market_amount_remaining\": \"1\",\n            \"created_at\": \"2019-01-30T07:25:19.091171Z\",\n            \"price\": \"1\",\n            \"order_type\": \"sell_limit\",\n            \"market_id\": 2,\n            \"open\": true,\n            \"trades\": null\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "Cancel Order",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"id\": 106}"
				},
				"url": {
					"raw": "{{url}}/v1/user/cancel_order?",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"cancel_order"
					],
					"query": [
						{
							"key": "id",
							"value": "Integer",
							"description": "Order ID to cancel",
							"disabled": true
						}
					]
				},
				"description": "Takes an Order ID.\n\n<aside class=\"notice\">\nSuccessful cancellation returns just a 200 with no payload\n</aside>"
			},
			"response": [
				{
					"name": "Cancel Order Fail Example",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"id\": 109}"
						},
						"url": {
							"raw": "{{url}}/v1/user/cancel_order?",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"cancel_order"
							],
							"query": [
								{
									"key": "id",
									"value": "Integer",
									"description": "Order ID to cancel",
									"disabled": true
								}
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 06:01:25 GMT"
						},
						{
							"key": "Content-Length",
							"value": "77"
						}
					],
					"cookie": [],
					"body": "{\n\t\"errors\": [{\n\t\t\"code\": \"order_not_found\",\n\t\t\"title\": \"That order no longer exists\"\n\t}]\n}"
				}
			]
		},
		{
			"name": "Withdraw History",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/v1/user/withdraws",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"withdraws"
					]
				},
				"description": "Returns a list of the user's Withdraws and metadata including `id`, `amount`, `currency`, `address`, `status`, `network_data`, `created_at` values"
			},
			"response": [
				{
					"name": "Withdraw History Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/v1/user/withdraws",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"withdraws"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 06:06:25 GMT"
						},
						{
							"key": "Content-Length",
							"value": "250"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"withdraws\": [\n            {\n                \"id\": 2,\n                \"amount\": \"1\",\n                \"user_id\": 0,\n                \"currency\": \"LTC\",\n                \"network_data\": {},\n                \"address\": \"mw67t7AE88SBSRWYw1is3JaFbtXVygwpmB\",\n                \"status\": \"needs_create\",\n                \"relay_status\": \"\",\n                \"created_at\": \"2019-02-01T06:06:16.218062Z\",\n                \"cancel_requested\": false\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Withdraw Details",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/v1/user/withdraw/:withdraw_id",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"withdraw",
						":withdraw_id"
					],
					"variable": [
						{
							"key": "withdraw_id",
							"value": "Integer",
							"description": "ID of the withdraw",
							"type": "string"
						}
					]
				},
				"description": "Takes an Withdraw ID and returns data about that Withdraw"
			},
			"response": [
				{
					"name": "Withdraw Details Example",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/v1/user/withdraw/:withdraw_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"withdraw",
								":withdraw_id"
							],
							"variable": [
								{
									"key": "withdraw_id",
									"value": "2",
									"description": "ID of the withdraw"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 06:07:43 GMT"
						},
						{
							"key": "Content-Length",
							"value": "247"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"withdraw\": {\n            \"id\": 2,\n            \"amount\": \"1\",\n            \"user_id\": 0,\n            \"currency\": \"LTC\",\n            \"network_data\": {},\n            \"address\": \"mw67t7AE88SBSRWYw1is3JaFbtXVygwpmB\",\n            \"status\": \"needs_create\",\n            \"relay_status\": \"\",\n            \"created_at\": \"2019-02-01T06:06:16.218062Z\",\n            \"cancel_requested\": false\n        }\n    }\n}"
				}
			]
		},
		{
			"name": "Deposit History",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/v1/user/deposits",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"deposits"
					]
				},
				"description": "Returns a list of the user's Deposits and metadata including `id`, `amount`, `currency`, `address`, `status`, `network_data`, `created_at` values."
			},
			"response": [
				{
					"name": "Deposit History",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/v1/user/deposits",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"deposits"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 06:08:28 GMT"
						},
						{
							"key": "Content-Length",
							"value": "546"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"deposits\": [\n            {\n                \"id\": \"1:855e291e4acd61c21fcbf1bc31aa2578fa8eb3b388d9e979077567a71b58f088\",\n                \"amount\": \"0.25\",\n                \"currency\": \"BTC\",\n                \"address\": \"1Kv3CKUigVPsxGCkkaoyLKrZHZ7WLq8jNK\",\n                \"status\": \"credited\",\n                \"relay_status\": \"\",\n                \"network_data\": {\n                \t\t\"confirms\": 2,\n\t\t\t\t\t\t\"confirms_required\": 2,\n\t\t\t\t\t\t\"txid\": \"855e291e4acd61c21fcbf1bc31aa2578fa8eb3b388d9e979077567a71b58f088\",\n\t\t\t\t\t\t\"vout\": 1\n                \t},\n                \"created_at\": \"2019-01-08T21:15:18.775592Z\"\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Deposit Details",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/v1/user/deposit/:deposit_id",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"deposit",
						":deposit_id"
					],
					"variable": [
						{
							"key": "deposit_id",
							"value": "string",
							"description": "ID of the deposit",
							"type": "string"
						}
					]
				},
				"description": "Takes an Deposit ID and returns data about that Deposit"
			},
			"response": [
				{
					"name": "Deposit Details Response",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/v1/user/deposit/:deposit_id",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"deposit",
								":deposit_id"
							],
							"variable": [
								{
									"key": "deposit_id",
									"value": ""
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "195"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Date",
							"value": "Tue, 26 Mar 2019 21:05:23 GMT"
						},
						{
							"key": "Vary",
							"value": "Origin"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"deposit\": [\n            {\n                \"id\": \"ab5e1720944065ad64917929082191270896edc1b17d18e921aa5b1b26e18ab4\",\n                \"amount\": \"1\",\n                \"currency\": \"BTC\",\n                \"address\": \"1CK6KHY6MHgYvmRQ4PAafKYDrg1ejbH1cE\",\n                \"status\": \"credited\",\n                \"relay_status\": \"\",\n                \"network_data\": {},\n                \"created_at\": \"2019-03-02T04:05:51.090427Z\"\n            }\n        ]\n    }\n}"
				}
			]
		},
		{
			"name": "Transfers",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{url}}/v1/user/transfers",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"transfers"
					]
				},
				"description": "Returns a list of the user's Transfers and metadata. Transfers are a special internal movement of funds between qTrade users. User created Transfers are not currently supported"
			},
			"response": [
				{
					"name": "Transfers",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{url}}/v1/user/transfers",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"transfers"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 06:21:43 GMT"
						},
						{
							"key": "Content-Length",
							"value": "25"
						}
					],
					"cookie": [],
					"body": "{\n\t\"data\": {\n\t\t\"transfers\": [{\n\t\t\t\"amount\": \"0.5\",\n\t\t\t\"created_at\": \"2018-12-10T00:06:41.066665Z\",\n\t\t\t\"currency\": \"BTC\",\n\t\t\t\"id\": 9,\n\t\t\t\"reason_code\": \"referral_payout\",\n\t\t\t\"reason_metadata\": {\n\t\t\t\t\"note\": \"January referral earnings\"\n\t\t\t},\n\t\t\t\"sender_email\": \"qtrade\",\n\t\t\t\"sender_id\": 218\n\t\t}]\n\t}\n}"
				}
			]
		},
		{
			"name": "Create a Withdraw",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"currency\": \"LTC\", \"amount\": \"1.51235432\", \"address\": \"n4D4LZGnh82gpgFgqoLr6phN7yZMMroAWE\"}"
				},
				"url": {
					"raw": "{{url}}/v1/user/withdraw",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"withdraw"
					],
					"query": [
						{
							"key": "amount",
							"value": "String",
							"description": "Exact amount, including decimal \"1.2345\"",
							"disabled": true
						},
						{
							"key": "currency",
							"value": "String",
							"description": "Price in base currency of the market",
							"disabled": true
						},
						{
							"key": "address",
							"value": "String",
							"description": "Address to receive funds",
							"disabled": true
						}
					]
				},
				"description": "Creates a request with Withdraw currency to a specified address. Currency is removed from the balance upon success, the corresponding network transaction may be delayed for up to 5 minutes."
			},
			"response": [
				{
					"name": "Create a Withdraw",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"currency\": \"LTC\", \"amount\": \"1.51235432\", \"address\": \"n4D4LZGnh82gpgFgqoLr6phN7yZMMroAWE\"}"
						},
						"url": {
							"raw": "{{url}}/v1/user/withdraw",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"withdraw"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 06:32:09 GMT"
						},
						{
							"key": "Content-Length",
							"value": "119"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"id\": 3,\n        \"code\": \"initiated\",\n        \"result\": \"Withdraw initiated. Please allow 3-5 minutes for our system to process.\"\n    }\n}"
				}
			]
		},
		{
			"name": "Get Deposit Address",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{url}}/v1/user/deposit_address/:currency",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"deposit_address",
						":currency"
					],
					"variable": [
						{
							"description": "Currency code ala \"LTC\"",
							"key": "currency",
							"value": "String",
							"type": "string"
						}
					]
				},
				"description": "Returns a deposit address for sending money to your exchange account. This address should rarely change, but it is good practice to fetch it before sending currency every time.\n\nThe returned `currency_status` key may be one of 4 values:\n\nStatus | Returns address | Use case\n--- | --- | --- \n`ok` | Yes | Normal operation\n`degraded` | Yes | Down for maintenance. Funds will be credited once maintenance is completed\n`disabled` | No | Deposits temporarily disabled due to network issues. Typically due to excessive forking, stalled chain, or consesus issues\n`offline` | No | Offline for other reason\n`delisted` | No | Currency is delisted and deposits are no longer accepted\n\n"
			},
			"response": [
				{
					"name": "Get Deposit Address - ok",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"currency\": \"LTC\"}"
						},
						"url": {
							"raw": "{{url}}/v1/user/deposit_address/:currency",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"deposit_address",
								":currency"
							],
							"variable": [
								{
									"key": "currency",
									"value": "LTC",
									"description": "Currency code ala \"LTC\""
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 06:47:40 GMT"
						},
						{
							"key": "Content-Length",
							"value": "54"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"address\": \"mhBYubznoJxVEst6DNr6arZHK6UYVTsjqC\",\n        \"currency_status\": \"ok\"\n    }\n}"
				},
				{
					"name": "Get Deposit Address - disabled",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/user/deposit_address/[currency_key]",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"deposit_address",
								"[currency_key]"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "{\n\t\"data\": {\n\t\t\"currency_status\": \"disabled\"\n\t}\n}"
				},
				{
					"name": "Get Deposit Address - degraded",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/user/deposit_address/:currency",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"deposit_address",
								":currency"
							],
							"variable": [
								{
									"description": "Currency code ala \"LTC\"",
									"key": "currency",
									"value": "LTC"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 07:32:37 GMT"
						},
						{
							"key": "Content-Length",
							"value": "60"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"address\": \"mhBYubznoJxVEst6DNr6arZHK6UYVTsjqC\",\n        \"currency_status\": \"degraded\"\n    }\n}"
				},
				{
					"name": "Get Deposit Address - delisted",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/v1/user/deposit_address/:currency",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"deposit_address",
								":currency"
							],
							"variable": [
								{
									"key": "currency",
									"value": "LTC",
									"description": "Currency code ala \"LTC\""
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Vary",
							"value": "Origin"
						},
						{
							"key": "Date",
							"value": "Fri, 01 Feb 2019 06:55:01 GMT"
						},
						{
							"key": "Content-Length",
							"value": "39"
						}
					],
					"cookie": [],
					"body": "{\n    \"data\": {\n        \"currency_status\": \"delisted\"\n    }\n}"
				}
			]
		},
		{
			"name": "Create Sell Limit",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"amount\": \"1\", \"price\": \"0.01\", \"market_id\": 1}"
				},
				"url": {
					"raw": "{{url}}/v1/user/sell_limit?",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"sell_limit"
					],
					"query": [
						{
							"key": "amount",
							"value": "String",
							"description": "Exact amount, including decimal \"1.2345\"",
							"disabled": true
						},
						{
							"key": "price",
							"value": "String",
							"description": "Price in base currency of the market",
							"disabled": true
						},
						{
							"key": "market_id",
							"value": "Integer",
							"description": "Integer ID of market",
							"disabled": true
						}
					]
				},
				"description": "Creates an order to sell a currency at the specified price. Amount will be removed from your balance immediately. Returns the created order id."
			},
			"response": [
				{
					"name": "Create Sell Limit",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"amount\": \"1\", \"price\": \"0.01\", \"market_id\": 1}"
						},
						"url": {
							"raw": "{{url}}/v1/user/sell_limit",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"sell_limit"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "521",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Fri, 06 Apr 2018 20:46:52 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Vary",
							"value": "Origin",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\n\t\"data\": {\n\t\t\"order\": {\n\t\t\t\"id\": 13253,\n\t\t\t\"market_amount\": \"1\",\n\t\t\t\"market_amount_remaining\": \"0\",\n\t\t\t\"created_at\": \"2018-04-06T20:46:52.899248Z\",\n\t\t\t\"price\": \"0.01\",\n\t\t\t\"order_type\": \"sell_limit\",\n\t\t\t\"market_id\": 1,\n\t\t\t\"open\": false,\n\t\t\t\"trades\": [{\n\t\t\t\t\"id\": 0,\n\t\t\t\t\"market_amount\": \"0.02820645\",\n\t\t\t\t\"price\": \"9.86805058\",\n\t\t\t\t\"base_amount\": \"0.27834267\",\n\t\t\t\t\"taker\": true,\n\t\t\t\t\"base_fee\": \"0.00069585\",\n\t\t\t\t\"created_at\": \"0001-01-01T00:00:00Z\"\n\t\t\t}, {\n\t\t\t\t\"id\": 0,\n\t\t\t\t\"market_amount\": \"0.97179355\",\n\t\t\t\t\"price\": \"9.86804952\",\n\t\t\t\t\"base_amount\": \"9.58970687\",\n\t\t\t\t\"taker\": true,\n\t\t\t\t\"base_fee\": \"0.02397426\",\n\t\t\t\t\"created_at\": \"0001-01-01T00:00:00Z\"\n\t\t\t}]\n\t\t}\n\t}\n}"
				}
			]
		},
		{
			"name": "Create Buy Limit",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"amount\": \"10\", \"price\": \"0.1\", \"market_id\": 1}"
				},
				"url": {
					"raw": "{{url}}/v1/user/buy_limit?",
					"host": [
						"{{url}}"
					],
					"path": [
						"v1",
						"user",
						"buy_limit"
					],
					"query": [
						{
							"key": "amount",
							"value": "String",
							"description": "Exact amount, including decimal \"1.2345\"",
							"disabled": true
						},
						{
							"key": "price",
							"value": "String",
							"description": "Price in base currency of the market",
							"disabled": true
						},
						{
							"key": "market_id",
							"value": "Integer",
							"description": "Integer ID of market",
							"disabled": true
						}
					]
				},
				"description": "Creates an order to buy a currency at the specified price on the specified market. Amount will be removed from your balance immediately. Returns the created order id."
			},
			"response": [
				{
					"name": "Create Buy Limit",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"amount\": \"10\", \"price\": \"0.1\", \"market_id\": 1}"
						},
						"url": {
							"raw": "{{url}}/v1/user/buy_limit",
							"host": [
								"{{url}}"
							],
							"path": [
								"v1",
								"user",
								"buy_limit"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Length",
							"value": "226",
							"name": "Content-Length",
							"description": "The length of the response body in octets (8-bit bytes)"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8",
							"name": "Content-Type",
							"description": "The mime type of this content"
						},
						{
							"key": "Date",
							"value": "Fri, 06 Apr 2018 20:47:11 GMT",
							"name": "Date",
							"description": "The date and time that the message was sent"
						},
						{
							"key": "Vary",
							"value": "Origin",
							"name": "Vary",
							"description": "Tells downstream proxies how to match future request headers to decide whether the cached response can be used rather than requesting a fresh one from the origin server."
						}
					],
					"cookie": [],
					"body": "{\n\t\"data\": {\n\t\t\"order\": {\n\t\t\t\"id\": 13254,\n\t\t\t\"market_amount\": \"10\",\n\t\t\t\"market_amount_remaining\": \"10\",\n\t\t\t\"created_at\": \"2018-04-06T20:47:11.966139Z\",\n\t\t\t\"price\": \"0.1\",\n\t\t\t\"base_amount\": \"1.0025\",\n\t\t\t\"order_type\": \"buy_limit\",\n\t\t\t\"market_id\": 1,\n\t\t\t\"open\": true,\n\t\t\t\"trades\": []\n\t\t}\n\t}\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "2b90e11c-fe0e-4222-b2e4-edfb0d844fd2",
				"type": "text/javascript",
				"exec": [
					"let key = pm.environment.get(\"hmac_key\");",
					"let keyid = pm.environment.get(\"hmac_key_id\");",
					"",
					"function epochTime() {",
					"    var d = new Date();",
					"    var t = d.getTime();",
					"    var o = t + \"\";",
					"    return o.substring(0, 10);",
					"}",
					"",
					"var time = epochTime();",
					"var encodedUri = request.url.slice(7);",
					"var rawSignature = request.method + \"\\n\";",
					"rawSignature += encodedUri + \"\\n\";",
					"rawSignature += time + \"\\n\";",
					"if (request.method == \"GET\") {",
					"    rawSignature += \"\\n\";",
					"} else {",
					"    rawSignature += request.data + \"\\n\";",
					"}",
					"rawSignature += key;",
					"console.log(request.data);",
					"",
					"var hash = CryptoJS.SHA256(rawSignature);",
					"",
					"postman.setEnvironmentVariable('key', key);",
					"",
					"pm.request.headers.add({",
					"    key: 'Content-Type',",
					"    value: 'application/json'",
					"})",
					"",
					"pm.request.headers.add({",
					"    key: 'HMAC-Timestamp', ",
					"    value: time",
					"})",
					"",
					"pm.request.headers.add({",
					"    key: 'Authorization', ",
					"    value: 'HMAC-SHA256 ' + keyid + ':' + hash.toString(CryptoJS.enc.Base64)",
					"})"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c607f45f-b466-4ed8-b8c7-0bc1655d79e7",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}